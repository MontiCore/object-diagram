/* (c) https://github.com/MontiCore/monticore */
package de.monticore;

/* Beta-version: This is intended to become a MontiCore stable grammar. */

/**
   OD4Report is used to capture execution traces,
   e.g. from tool executions.   

   OD4Report builds on OD4Data and provides two specific 
   extensions:
   1. It includes DateLiterals to describe timing
   2. It extends the Name concept by an unusual form of names
      that encode a lot of additional information about the 
      object content. This is e.g. helpful in MontoCore 
      tool execution reports.
   
   This grammar brings together the following OD components
   * ODBasis.mc4
       for the core structure of ODs
   * ODAttribute.mc4
       for the forms of attribute values 
   * ODLink.mc4
       defining the links between objects
  * OD4Data.mc4
       ??? TODO: clarify.       
*/


grammar OD4Report extends de.monticore.ODBasics,
	                      de.monticore.DateLiterals {

    start ODArtifact;

    /** ODDate allows that Date values can be also part
     * of of object diagrams in form of attribute values. 
     */
    ODDate implements ODValue = Date;

    /** ASTODName allows two forms of names.
     * Special form of names (see ODSpecialName) is coming from
     *  MontiCore reports, that generate names for 
     *  otherwise anonymous AST nodes and encode certain forms
     *  of information, such as line/colum of defining occurrence.
     *
     *  @attribute name Name
     *  @attribute oDSpecialName Specific naming for Objects
     */
    ODName implements ODValue =
      simpleName:Name | specialName:ODSpecialName;

    // Both forms of names are returned as Name (i.e. as String)
    astrule ODName =
      method public String getName() {
        if (isPresentSimpleName()) {
          return getSimpleName();
        }
        return getSpecialName();
       };

    /** Special names start with a "@" and contain
     * an optional Position in the source model "(4,5)":
     * which stands for: line 4, col. 5 
     * or "(4,5!2)" : second occurence of that name 
     */
    token ODSpecialName = '@'
      (Name|'!')+
      ('(' ODPositionNumber ')')?;

    fragment token ODPositionNumber = (Digits ("," Digits)+)? ('!' Digits)?;

}
